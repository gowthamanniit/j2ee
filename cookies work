A cookie is a kind of information that is stored at client side.
A cookie is a small piece of information that is persisted between 
the multiple client requests.

How Cookie works
By default, each request is considered as a new request. 
In cookies technique, we add cookie with response from the servlet. 
So cookie is stored in the cache of the browser. 
After that if request is sent by the user, cookie is added with request by default. 
Thus, we recognize the user as the old user.

Types of Cookie
There are 2 types of cookies in servlets.

Non-persistent cookie
Persistent cookie
Non-persistent cookie
It is valid for single session only. 
It is removed each time when user closes the browser.

Persistent cookie
It is valid for multiple session . 
It is not removed each time when user closes the browser. 
It is removed only if user logout or signout.


Advantage of Cookies
Simplest technique of maintaining the state.
Cookies are maintained at client side.
Disadvantage of Cookies
It will not work if cookie is disabled from the browser.
Only textual information can be set in Cookie object.

Cookie class
javax.servlet.http.Cookie class provides the functionality of using cookies. 
It provides a lot of useful methods for cookies.

Constructor of Cookie class
Constructor	Description
Cookie()	constructs a cookie.
Cookie(String name, String value)	constructs a cookie with a specified name and value.
Useful Methods of Cookie class
There are given some commonly used methods of the Cookie class.

Method	Description
public void setMaxAge(int expiry)	Sets the maximum age of the cookie in seconds.
public String getName()	Returns the name of the cookie. 
The name cannot be changed after creation.

public String getValue()	Returns the value of the cookie.
public void setName(String name)	changes the name of the cookie.
public void setValue(String value)	changes the value of the cookie.
Other methods required for using Cookies

For adding cookie or getting the value from the cookie, 
we need some methods provided by other interfaces. They are:
public void addCookie(Cookie ck):
method of HttpServletResponse interface is used to add 
cookie in response object.

public Cookie[] getCookies():
method of HttpServletRequest interface is used to return 
all the cookies from the browser.

How to create Cookie?
======================
Cookie ck=new Cookie("user","raja");//creating cookie object  
response.addCookie(ck);//adding cookie in the response  

How to delete Cookie?
======================
Cookie ck=new Cookie("user","");//deleting value of cookie  
ck.setMaxAge(0);//changing the maximum age to 0 seconds  
response.addCookie(ck);//adding cookie in the response  

How to get Cookies?
===================
Cookie ck[]=request.getCookies();  
for(int i=0;i<ck.length;i++){  
 out.print("<br>"+ck[i].getName()+" "+ck[i].getValue());
//printing name and value of cookie  
}  

program: index.html
====================
<form action="servlet1" method="post">  
Name:<input type="text" name="userName"/><br/>  
<input type="submit" value="go"/>  

FirstServlet
============
import java.io.*;  
import javax.servlet.*;  
import javax.servlet.http.*;  
  
  
public class FirstServlet extends HttpServlet {  
  
  public void doPost(HttpServletRequest request, HttpServletResponse response){  
    try{  
  
    response.setContentType("text/html");  
    PrintWriter out = response.getWriter();  
          
    String n=request.getParameter("userName");  
    out.print("Welcome "+n);  
  
    Cookie ck=new Cookie("uname",n);//creating cookie object  
    response.addCookie(ck);//adding cookie in the response  
  
    //creating submit button  
    out.print("<form action='servlet2'>");  
    out.print("<input type='submit' value='go'>");  
    out.print("</form>");  
          
    out.close();  
  
        }catch(Exception e){System.out.println(e);}  
  }  
}  

secondservelt
===================
import java.io.*;  
import javax.servlet.*;  
import javax.servlet.http.*;  
  
public class SecondServlet extends HttpServlet {  
  
public void doPost(HttpServletRequest request, HttpServletResponse response){  
    try{  
  
    response.setContentType("text/html");  
    PrintWriter out = response.getWriter();  
      
    Cookie ck[]=request.getCookies();  
    out.print("Hello "+ck[0].getValue());  
  
    out.close();  
  
         }catch(Exception e){System.out.println(e);}  
    }  
      
  
}  
web.xml file:
==============
<web-app>  
  
<servlet>  
<servlet-name>s1</servlet-name>  
<servlet-class>FirstServlet</servlet-class>  
</servlet>  
  
<servlet-mapping>  
<servlet-name>s1</servlet-name>  
<url-pattern>/servlet1</url-pattern>  
</servlet-mapping>  
  
<servlet>  
<servlet-name>s2</servlet-name>  
<servlet-class>SecondServlet</servlet-class>  
</servlet>  
  
<servlet-mapping>  
<servlet-name>s2</servlet-name>  
<url-pattern>/servlet2</url-pattern>  
</servlet-mapping>  
  
</web-app>  
